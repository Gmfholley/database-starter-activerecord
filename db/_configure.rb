# Do not edit this file.

ActiveRecord::Base.raise_in_transactional_callbacks = true

class DB
  def self.define_table(table)
    if !ActiveRecord::Base.connection.table_exists?(table)
      ActiveRecord::Base.connection.create_table(table) do |t|
        t.timestamps null: false
      end
    end
  end

  def self.define_column(table, column, data_type=nil)
    invalid_data_type_error if !valid_data_type?(data_type)
    create_column_if_needed(table, column, data_type)
  end

  private

  def self.invalid_data_type_error
    raise "\n\nError: You need to indicate a valid data type for the column you're adding.\n\nFor example, `DB.define_column('users', 'name', 'string')`.\n\nThe valid data types are: #{valid_data_types.join(", ")}\n\n"
  end

  def self.create_column_if_needed(table, column, data_type)
    if !ActiveRecord::Base.connection.column_exists?(table, column)
      ActiveRecord::Base.connection.add_column(table, column, data_type)
    end
  end

  def self.valid_data_type?(data_type)
    valid_data_types.include?(normalized_data_type(data_type))
  end

  def self.valid_data_types
    [
      "binary",
      "boolean",
      "date",
      "datetime",
      "decimal",
      "float",
      "integer",
      "primary_key",
      "references",
      "string",
      "text",
      "time",
      "timestamp"
    ]
  end

  def self.normalized_data_type(data_type)
    data_type.to_s.downcase
  end
end
